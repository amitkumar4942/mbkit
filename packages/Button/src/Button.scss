@import "../../../shared/scss/mixins.scss";

// TODO: Once packages are published consume theme and replace these with SCSS variables from the Theme package
$primary: var(--primary-1, #993100);
$secondary: var(--secondary-1, #004C57);
$secondary2: var(--secondary-2, #007485);
$secondary3: var(--secondary-3, #E5F2F4);
$tertiary: var(--neutral-2, #5A5E66);
$black: var(--neutral-1, #0B0B0D);
$white: var(--neutral-7, #ffffff);
$neutral3: var(--neutral-3, #8F96A1);
$neutral4: var(--neutral-4, #CBD0D7);
$focusColor: var(--focus, #6096e6bf);

$rippleTiming: 466;

$iconSize1: 100px;
$iconSize2: 60px;
$iconSize3: 40px;
$iconSize4: 30px;

:export {
    rippleTiming: $rippleTiming;
}

@mixin disabled() {
    &[disabled]:not([disabled="false"]) {
        @content;
    }
}
@mixin svgTargetFill() {
    svg g:not([fill~="#"]),
    svg path:not([fill~="#"]),
    svg mask:not([fill~="#"]),
    svg use:not([fill~="#"]) { 
        @content;
    }
}
@mixin buttonStyles($background, $border: $background, $color: $white, $svg: $white) {
    border-color: $border;
    background: $background;
    color: $color;
    
    .ripple {
        background-color: $background;
    }

    @include svgTargetFill {
        fill: $svg;
    }

    @include loader($color, $background);
}
@mixin buttonHover($background, $border: $background, $color: $black, $svg: $tertiary) {
    &:not(.loading):not([disabled]):hover {
        border-color: $border;
        background: $background;
        color: $color;
        
        @include svgTargetFill {
            fill: $svg;
        }
    }
}
@mixin buttonDisabled {
    @include disabled {
        cursor: not-allowed;
        background: $neutral4; 
        border-color: $neutral4;
        color: $neutral3;

        @include svgTargetFill {
            fill: $neutral3;
        }

        @include loader($neutral3, $neutral4);
    }
}

.button {
    text-align: center;
    appearance: none;
    border-radius: var(--radius, 3px);
    border: 1px solid transparent;
    cursor: pointer;
    margin: 0;
    padding: 0;
    font-family: var(--font-family, 'Lato', 'Helvetica Neue', 'Helvetica', 'Arial', 'sans-serif');
    transition: background .2s ease-out, color .2s ease-out, fill .2s ease-out;
    overflow: hidden;

    &, .children {
        display: inline-flex;
        justify-content: center;
        align-items: center;
        position: relative;
    }
    .children {
        z-index: 1;
        width: 100%;
        height: 100%;

        &:focus {
            outline: none;
        }
    }

    svg {
        margin: 0 4px;
    }

    .ripple {
        height: 12px;
        width: 12px;
        position: absolute;
        border-radius: 50%;
        opacity: .3;
        transform: scale(.1);
        left: 0;
        top: 0;
        animation: grow #{$rippleTiming}ms cubic-bezier(0, 0, 0.66, 1);
        z-index: 1;
    }
    
    &.size4 .children {
        padding: 4px 24px;
        min-width: 76px;
        font-size: .75rem;
    }
    &.size3 .children {
        padding: 8px 32px;
        min-width: 96px;
        font-size: .875rem;
    }
    &.size2 .children {
        padding: 16px 40px;
        min-width: 116px;
        font-size: 1rem;
    }
    &.size1 .children {
        padding: 32px 64px;
        min-width: 136px;
        font-size: 1.5rem;
    }
    &.icon, &.iconPrimary {
        .children {
            min-width: initial;
            padding: 8px;
        }
        $svgSizeSmaller: 8px;
        &.size1 .children {
                width: $iconSize1;
                height: $iconSize1;
                svg {
                    width: $iconSize1 - $svgSizeSmaller;
                    height: $iconSize1 - $svgSizeSmaller;
                }
        }
        &.size2 .children {
                width: $iconSize2;
                height: $iconSize2;
                svg {
                    width: $iconSize2 - $svgSizeSmaller;
                    height: $iconSize2 - $svgSizeSmaller;
                }
        }
        &.size3 .children {
            
                width: $iconSize3;
                height: $iconSize3;
                svg {
                    width: $iconSize3 - $svgSizeSmaller;
                    height: $iconSize3 - $svgSizeSmaller;
                }
            
        }
        &.size4 .children {
            width: $iconSize4;
            height: $iconSize4;
            svg {
                width: $iconSize4 - $svgSizeSmaller;
                height: $iconSize4 - $svgSizeSmaller;
            }
        }
    }

    &.primary {
        @include buttonStyles($primary);
        @include buttonHover($white, $primary);
    }
    &.secondary {
        @include buttonStyles($secondary);
        @include buttonHover($white, $secondary);
    }
    &.tertiary {
        @include buttonStyles($tertiary);
        @include buttonHover($white, $tertiary);
    }
    &.primaryOutlined {
        @include buttonStyles($white, $primary, $black, $tertiary);
        @include buttonHover($primary, $primary, $white, $white);
    }
    &.secondaryOutlined {
        @include buttonStyles($white, $secondary, $black, $tertiary);
        @include buttonHover($secondary, $secondary, $white, $white);
    }
    &.tertiaryOutlined {
        @include buttonStyles($white, $tertiary, $black, $tertiary);
        @include buttonHover($tertiary, $tertiary, $white, $white);
    }
    &.offCard {
        @include buttonStyles($white, $white, $black, $tertiary);
        @include buttonHover($tertiary, $tertiary, $white, $white);
    }
    &.iconPrimary {
        @include buttonStyles($white, $white, $secondary, $secondary);
        @include buttonHover($secondary3, $secondary3, $secondary, $secondary);
        border-radius: 50%;
    }
    &.icon {
        @include buttonStyles($white, $white, $black, $black);
        @include buttonHover($neutral4, $neutral4, $black, $black);
        border-radius: 50%;
    }
    &.simpleText {
        @include buttonStyles($white, $white, $secondary, $secondary);
        @include buttonStyles($white, $white, $secondary, $secondary);
        &:hover {
            text-decoration: underline;
        }
    }

    &.loading {
        cursor: wait;

        .children {
            opacity: 0;
            visibility: hidden;
        }
    }

    @include buttonDisabled();

    svg g.loading {
        fill: none !important;
    }

    &:focus {
        outline: none;
        box-shadow: 0 0 0 4px $focusColor;
        transition: box-shadow 100ms ease-out;

        &:not(.loading):active {
            box-shadow: 0 0 0 8px $focusColor;
        }
    }
}




@keyframes grow {
    0% {
        opacity: .5;
        transform: scale(.1);
    }
    20% {
        transform: scale(1);
    }
    80% {
        opacity: .2;
        transform: scale(50);
    }
    100% {
        opacity: 0;
        transform: scale(50);
    }
}